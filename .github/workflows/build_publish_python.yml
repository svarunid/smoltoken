name: Build and publish Python wheels

on:
  push:
    tags:
      - python-v[0-9]+.[0-9]+.[0-9]+

jobs:
  build_wheels:
    name: py${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [311, 312, 313]

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels for macOS Python 3.11
        if: matrix.os == 'macos-latest' && matrix.python-version == '311'
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_BUILD: "cp${{ matrix.python-version }}-*"
          CIBW_ENVIRONMENT: MACOSX_DEPLOYMENT_TARGET=10.12
        with:
          package-dir: python
          output-dir: wheelhouse
          config-file: "{package}/pyproject.toml"

      - name: Build wheels (default)
        if: matrix.os != 'macos-latest' || matrix.python-version != '311'
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_BUILD: "cp${{ matrix.python-version }}-*"
        with:
          package-dir: python
          output-dir: wheelhouse
          config-file: "{package}/pyproject.toml"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  publish:
    name: Publish Wheels to PyPI
    needs: build_wheels
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist
          pattern: cibw-wheels-*

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install twine
        run: pip install twine

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: twine upload ./dist/*/*.whl
